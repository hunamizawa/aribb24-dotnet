name: Testing on .NET Core

on:
  push:
    branches: [ master, hunamizawa/develop ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    strategy:
      matrix:
        dotnet_core: [ '2.0', '2.1', '3.1' ]
    
    runs-on: ubuntu-latest
    
    env:
      CORESDK_20: 2.1.202
      CORESDK_21: 2.1.810
      CORESDK_31: 3.1.402
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core 2.0
      if: matrix.dotnet_core == '2.0'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: $CORESDK_20

    - name: Setup .NET Core 2.1
      if: matrix.dotnet_core != '2.0'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: $CORESDK_21

    - name: Setup .NET Core 3.1
      if: matrix.dotnet_core != '2.0'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: $CORESDK_31

    - name: .net SxS
      if: matrix.dotnet_core != '2.0'
      run: |
        rsync -a ${DOTNET_ROOT/$CORESDK_31/$CORESDK_21}/* $DOTNET_ROOT/
        
    - name: Install dependencies
      run: dotnet restore

    - name: Build
      if: matrix.dotnet_core == '2.0'
      run: |
        dotnet build AribB24.DotNet/AribB24.DotNet.csproj --no-restore --configuration Release --framework netstandard2.0
    - name: Build
      if: matrix.dotnet_core != '2.0'
      run: |
        dotnet build AribB24.DotNet/AribB24.DotNet.csproj --no-restore --configuration Release --framework netcoreapp2.1

    - name: Test
      run: dotnet test AribB24.DotNet.Tests/AribB24.DotNet.Tests.csproj --configuration Release --framework ${{ format('netcoreapp{0}', matrix.dotnet_core) }}
